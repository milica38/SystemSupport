FUNCTION_BLOCK sablon


    VAR_INPUT
        coreNumber : REAL;
        ramSize : REAL;
        gpuSize : REAL;
        storageSize: REAL;
    END_VAR


    VAR_OUTPUT
        homeUsage : REAL;
        gamingUsage : REAL;
        programmingUsage : REAL;
    END_VAR

    FUZZIFY coreNumber
        TERM low:=(0,1) (6,0);
        TERM medium:=(3,0) (8,1) (12,0);
        TERM high:=(8,0) (32,1) (64,0);
        TERM ultra:=(16,0) (64,1);
    END_FUZZIFY


    FUZZIFY storageSize
        TERM small:=(0,1) (500,0);
        TERM medium:=(256,0) (500,1) (1000,0);
        TERM big:=(1000,0) (2000,1) (3000,0);
        TERM ultra:=(2000,0) (5000,1);
    END_FUZZIFY

    FUZZIFY ramSize
        TERM small:=(0,1) (4,0);
        TERM medium:=(4,0) (4,1) (8,0);
        TERM big:=(8,0) (16,1) (32,0);
        TERM ultra:=(30,0) (64,1);
    END_FUZZIFY

    FUZZIFY gpuSize
        TERM small:=(0,1) (2,0);
        TERM medium:=(1,0) (4,1) (6,0);
        TERM big:=(4,0) (6,1) (8,0);
        TERM ultra:=(7,0) (32,1);
    END_FUZZIFY

    DEFUZZIFY homeUsage
        TERM low:=(0,1) (50,0);
        TERM medium:=(30,0) (50,1) (70,0);
        TERM high:=(60,0) (100,1);
        METHOD : COG;
	    DEFAULT := 0;
    END_DEFUZZIFY

    DEFUZZIFY gamingUsage
        TERM low:=(0,1) (50,0);
        TERM medium:=(30,0) (50,1) (70,0);
        TERM high:=(60,0) (100,1);
        METHOD : COG;
	    DEFAULT := 0;
    END_DEFUZZIFY

    DEFUZZIFY programmingUsage
        TERM low:=(0,1) (50,0);
        TERM medium:=(30,0) (50,1) (70,0);
        TERM high:=(60,0) (100,1);
        METHOD : COG;
	    DEFAULT := 0;
    END_DEFUZZIFY

    RULEBLOCK blok1
        AND : MIN;
	    ACT : MIN;
	    ACCU : MAX;


        //home rules
        RULE 1: IF coreNumber IS medium THEN homeUsage IS high;
        RULE 2: IF coreNumber IS high THEN homeUsage IS medium;
        RULE 3: IF coreNumber IS ultra THEN homeUsage IS low;
        RULE 4: IF coreNumber IS low THEN homeUsage IS low;

        RULE 5: IF ramSize IS small THEN homeUsage IS low;
        RULE 6: IF ramSize IS medium THEN homeUsage IS high;
        RULE 7: IF ramSize IS big THEN homeUsage IS medium;
        RULE 8: IF ramSize IS ultra THEN homeUsage IS low;

        RULE 9: IF gpuSize IS small THEN homeUsage IS high;
        RULE 10: IF gpuSize IS medium THEN homeUsage IS high;
        RULE 11: IF gpuSize IS big THEN homeUsage IS medium;
        RULE 12: IF gpuSize IS ultra THEN homeUsage IS low;

        RULE 13: IF storageSize IS small THEN homeUsage IS low;
        RULE 14: IF storageSize IS medium THEN homeUsage IS high;
        RULE 15: IF storageSize IS big THEN homeUsage IS medium;
        RULE 16: IF storageSize IS ultra THEN homeUsage IS low;

        //gaming rules
        RULE 17: IF coreNumber IS medium THEN gamingUsage IS medium;
        RULE 18: IF coreNumber IS high THEN gamingUsage IS high;
        RULE 19: IF coreNumber IS ultra THEN gamingUsage IS high;
        RULE 20: IF coreNumber IS low THEN gamingUsage IS low;

        RULE 21: IF ramSize IS small THEN gamingUsage IS low;
        RULE 22: IF ramSize IS medium THEN gamingUsage IS medium;
        RULE 23: IF ramSize IS big THEN gamingUsage IS high;
        RULE 24: IF ramSize IS ultra THEN gamingUsage IS high;

        RULE 25: IF gpuSize IS small THEN gamingUsage IS low;
        RULE 26: IF gpuSize IS medium THEN gamingUsage IS medium;
        RULE 27: IF gpuSize IS big THEN gamingUsage IS high;
        RULE 28: IF gpuSize IS ultra THEN gamingUsage IS high;

        RULE 29: IF storageSize IS small THEN gamingUsage IS low;
        RULE 30: IF storageSize IS medium THEN gamingUsage IS medium;
        RULE 31: IF storageSize IS big THEN gamingUsage IS high;
        RULE 32: IF storageSize IS ultra THEN gamingUsage IS high;

        //programming rules
        RULE 33: IF coreNumber IS medium THEN programmingUsage IS medium;
        RULE 34: IF coreNumber IS high THEN programmingUsage IS high;
        RULE 35: IF coreNumber IS ultra THEN programmingUsage IS high;
        RULE 36: IF coreNumber IS low THEN programmingUsage IS low;

        RULE 37: IF ramSize IS small THEN programmingUsage IS low;
        RULE 38: IF ramSize IS medium THEN programmingUsage IS medium;
        RULE 39: IF ramSize IS big THEN programmingUsage IS high;
        RULE 40: IF ramSize IS ultra THEN programmingUsage IS low;

    END_RULEBLOCK

END_FUNCTION_BLOCK