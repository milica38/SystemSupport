FUNCTION_BLOCK sablon


    VAR_INPUT
        coreNumber : REAL;
        ramSize : REAL;
        gpuSize : REAL;
        storageSize: REAL;
        cpuClockSpeed: REAL;
    END_VAR


    VAR_OUTPUT
        home : REAL;
        gaming : REAL;
        programming : REAL;
        webHosting: REAL;
    END_VAR

    FUZZIFY coreNumber
        TERM small:=(0,1) (2,0);
        TERM medium:=(1,0) (2,1) (6,0);
        TERM big:=(4,0) (6,1);
    END_FUZZIFY


    FUZZIFY storageSize
        TERM small:=(0,1) (256,0);
        TERM medium:=(128,0) (256,1) (1000,0);
        TERM big:=(512,0) (1000,1);
    END_FUZZIFY

    FUZZIFY ramSize
        TERM small:=(0,1) (4,0);
        TERM medium:=(2,0) (4,1) (16,0);
        TERM big:=(8,0) (16,1);
    END_FUZZIFY

    FUZZIFY gpuSize
        TERM small:=(0,1) (2,0);
        TERM medium:=(1,0) (2,1) (8,0);
        TERM big:=(6,0) (8,1);
    END_FUZZIFY

    FUZZIFY cpuClockSpeed
        TERM small:=(0,1) (2,0);
        TERM medium:=(1,0) (2,1) (3.5,0);
        TERM big:=(3,0) (3.5,1);
    END_FUZZIFY

    DEFUZZIFY home
        TERM low:=(0,1) (50,0);
        TERM medium:=(30,0) (50,1) (70,0);
        TERM high:=(60,0) (100,1);
        METHOD : COG;
	    DEFAULT := 0;
    END_DEFUZZIFY

    DEFUZZIFY gaming
        TERM low:=(0,1) (50,0);
        TERM medium:=(30,0) (50,1) (70,0);
        TERM high:=(60,0) (100,1);
        METHOD : COG;
	    DEFAULT := 0;
    END_DEFUZZIFY

    DEFUZZIFY programming
        TERM low:=(0,1) (50,0);
        TERM medium:=(30,0) (50,1) (70,0);
        TERM high:=(60,0) (100,1);
        METHOD : COG;
	    DEFAULT := 0;
    END_DEFUZZIFY

    DEFUZZIFY webHosting
            TERM low:=(0,1) (50,0);
            TERM medium:=(30,0) (50,1) (70,0);
            TERM high:=(60,0) (100,1);
            METHOD : COG;
    	    DEFAULT := 0;
    END_DEFUZZIFY

    RULEBLOCK blok1
        AND : MIN;
	    ACT : MIN;
	    ACCU : MAX;


        //home rules
        RULE 1: IF coreNumber IS medium THEN home IS high;
        RULE 2: IF coreNumber IS big THEN home IS low;
        RULE 3: IF coreNumber IS small THEN home IS high;

        RULE 4: IF ramSize IS small THEN home IS high;
        RULE 5: IF ramSize IS medium THEN home IS low;
        RULE 6: IF ramSize IS big THEN home IS low;

        RULE 7: IF gpuSize IS small THEN home IS high;
        RULE 8: IF gpuSize IS medium THEN home IS high;
        RULE 9: IF gpuSize IS big THEN home IS medium;

        RULE 10: IF storageSize IS small THEN home IS medium;
        RULE 11: IF storageSize IS medium THEN home IS medium;
        RULE 12: IF storageSize IS big THEN home IS low;

        RULE 13: IF cpuClockSpeed IS small THEN home IS high;
        RULE 14: IF cpuClockSpeed IS medium THEN home IS high;
        RULE 15: IF cpuClockSpeed IS big THEN home IS low;

        //gaming rules
        RULE 16: IF coreNumber IS medium THEN gaming IS low;
        RULE 17: IF coreNumber IS big THEN gaming IS high;
        RULE 18: IF coreNumber IS small THEN gaming IS low;

        RULE 19: IF ramSize IS small THEN gaming IS low;
        RULE 20: IF ramSize IS medium THEN gaming IS low;
        RULE 21: IF ramSize IS big THEN gaming IS high;

        RULE 22: IF gpuSize IS small THEN gaming IS low;
        RULE 23: IF gpuSize IS medium THEN gaming IS low;
        RULE 24: IF gpuSize IS big THEN gaming IS high;

        RULE 28: IF cpuClockSpeed IS small THEN gaming IS low;
        RULE 29: IF cpuClockSpeed IS medium THEN gaming IS low;
        RULE 30: IF cpuClockSpeed IS big THEN gaming IS high;

        RULE 25: IF storageSize IS medium THEN gaming IS medium;
        RULE 26: IF storageSize IS big THEN gaming IS high;
        RULE 27: IF storageSize IS small THEN gaming IS low;

        //programming rules
        RULE 31: IF coreNumber IS medium THEN programming IS medium;
        RULE 32: IF coreNumber IS big THEN programming IS medium;
        RULE 33: IF coreNumber IS small THEN programming IS low;

        RULE 34: IF ramSize IS small THEN programming IS low;
        RULE 35: IF ramSize IS medium THEN programming IS medium;
        RULE 36: IF ramSize IS big THEN programming IS medium;

        RULE 37: IF cpuClockSpeed IS small THEN programming IS low;
        RULE 38: IF cpuClockSpeed IS medium THEN programming IS medium;
        RULE 39: IF cpuClockSpeed IS big THEN programming IS medium;

        //web hosting rules
        RULE 40: IF storageSize IS medium THEN webHosting IS medium;
        RULE 41: IF storageSize IS big THEN webHosting IS high;
        RULE 42: IF storageSize IS small THEN webHosting IS low;

        RULE 43: IF ramSize IS small THEN webHosting IS low;
        RULE 44: IF ramSize IS medium THEN webHosting IS medium;
        RULE 45: IF ramSize IS big THEN webHosting IS high;

        RULE 46: IF cpuClockSpeed IS small THEN webHosting IS low;
        RULE 47: IF cpuClockSpeed IS medium THEN webHosting IS low;
        RULE 48: IF cpuClockSpeed IS big THEN webHosting IS medium;

    END_RULEBLOCK

END_FUNCTION_BLOCK